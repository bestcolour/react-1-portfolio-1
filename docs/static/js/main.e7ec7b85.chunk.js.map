{"version":3,"sources":["Components/PageModules/pageMod.module.css","Components/PageModules/LandingPage/ScrollingNavBar/ScrollingNavBarMobile/ScrollingNavBarMobile.module.css","Components/PageModules/LandingPage/Qualifications/Qualifications.module.css","Components/PageModules/LandingPage/Footer/Footer.module.css","Components/PageModules/LandingPage/ScrollingNavBar/ScrollingNavBarDesktop/ScrollingNavBarDesktop.module.css","Components/PageModules/LandingPage/Projects/Projects.module.css","Components/PageModules/LandingPage/AboutMe/AboutMe.module.css","Components/Common/LPSection/LPSection.module.css","Components/PageModules/LandingPage/Intro/Intro.module.css","Components/Common/PercentageBar/PercentageBar.module.css","Components/Common/ImageButtons/index.js","Components/Common/ImageButtons/ImageButtons.js","Components/PageModules/LandingPage/Intro/Intro.js","Components/PageModules/LandingPage/Intro/index.js","Components/Common/LPSection/index.js","Components/Common/LPSection/LPSection.js","Components/PageModules/LandingPage/AboutMe/index.js","Components/PageModules/LandingPage/AboutMe/AboutMe.js","Components/Common/PercentageBar/index.js","Components/Common/PercentageBar/PercentageBar.js","Components/PageModules/LandingPage/Qualifications/Qualifications.js","Components/PageModules/LandingPage/Qualifications/index.js","Components/PageModules/LandingPage/Projects/index.js","Components/PageModules/LandingPage/Projects/Projects.js","Components/PageModules/LandingPage/Footer/index.js","Components/PageModules/LandingPage/Footer/Footer.js","Components/PageModules/LandingPage/ScrollingNavBar/ScrollingNavBarDesktop/index.js","Components/PageModules/LandingPage/ScrollingNavBar/ScrollingNavBarDesktop/ScrollingNavBarDesktop.js","Components/PageModules/LandingPage/ScrollingNavBar/ScrollingNavBarMobile/index.js","Components/PageModules/LandingPage/ScrollingNavBar/ScrollingNavBarMobile/ScrollingNavBarMobile.js","Components/PageModules/LandingPage/ScrollingNavBar/index.js","Components/PageModules/LandingPage/ScrollingNavBar/ScrollingNavBar.js","Components/PageModules/LandingPage/LandingPage.js","Components/PageModules/LandingPage/index.js","Data.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ImageButtons","props","array","data","finalButtonJSX","setting","linkBgStyle","backgroundImage","buttonImg","backgroundColor","backgroundRepeat","backgroundSize","push","href","buttonLink","style","target","getSunsetBg","hours","Date","getHours","Intro","introData","socialMediaData","name","buttonSettingsArray","shortDescription","bgStyle","height","backgroundPosition","position","className","commonStyle","col12","id","imgTexts","buttonHolder","LPSection","leftContent","rightContent","bottomContent","sectionClass","LProw","col3","col9","AboutMe","aboutMeData","imageURL","aboutMeDescription","country","imgStyle","width","zIndex","borderRadius","imageHolder","textsHolder","highestH1","aboutMeHolder","PercentageBar","percentage","color","bgColor","barStyle","toString","undefined","bgBarStyle","percentageBarHolder","percentageBar","generateInfoContent","title","subTitle","date","other","otherAchievementsJSX","achievements","infoHolder","italicsHolder","otherAchievements","generateLeftContent","qualificationNameHolder","Qualifications","educationExpArray","workExpArray","skillsExpArray","eduRightContent","workRightContent","skillsRightContent","eduLeftContent","workLeftContent","skillsLeftContent","jsxToPush","instituteName","educationCertificate","dateOfGraduation","companyName","role","lastDayOfWork","skillName","skillPercentage","skillBar","allQualifications","Projects","projectSettingsArray","finalImgJSX","imgBgStyle","projectImg","projectLink","mainContainer","projectsHolder","Footer","contactDetailsArray","finalContactJSX","item","platform","topFooter","topFooterContainer","contactDetailsHolder","bottomFooter","bottomFooterContainer","ScrollingNavBarDesktop","m_NavBarDesktopRef","React","createRef","handleScroll","bind","handleWindowResize","state","navBarState","prevScrollY","sectionHeightMarks","currentSectionIndex","newSectionSize","this","getNewSectionsSizes","currSectionIndex","getCurrentSectionIndex","changeSelectedSection","setState","initialise","window","addEventListener","removeEventListener","dataArray","listItemJSXArray","sectionId","sectionName","transition","navBarDesktop","ref","linksContainer","current","classList","toggle","hide","index","length","sectionID","document","getElementById","remove","selectedSection","newSectionID","add","currentScrollY","scrollY","heightOfNavBar","clientHeight","toggleNavBar","newBarState","HiddenPastTop_handleScrollDown","ShownPastTop_handleScrollUp","currentIndex","sectionMarksArray","currScrollY","topPoint","botPoint","newSectionMarks","currentTotalHeight","Component","ScrollingNavBarMobile","handleClick","console","log","darkOverlay","showOverlay","sideMenu","showSideMenu","finalJSX","navBarMobileContainer","onClick","sideButton","stripe","ScrollingNavBar","sectionData","LandingPage","qualificationsData","projectsData","landingPageData","App","key","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e7ec7b85.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"col1\":\"pageMod_col1__32mFu\",\"col2\":\"pageMod_col2__asK1d\",\"col3\":\"pageMod_col3__2IH1K\",\"col4\":\"pageMod_col4__2nzt9\",\"col5\":\"pageMod_col5__13B4F\",\"col6\":\"pageMod_col6__3rD-J\",\"col7\":\"pageMod_col7__2NXJv\",\"col8\":\"pageMod_col8__3thPe\",\"col9\":\"pageMod_col9__2OYmx\",\"col10\":\"pageMod_col10__1PH3O\",\"col11\":\"pageMod_col11__3VNr2\",\"col12\":\"pageMod_col12__3Eq-_\",\"LProw\":\"pageMod_LProw__1YrVb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarMobileContainer\":\"ScrollingNavBarMobile_navBarMobileContainer__1ovnk\",\"transition\":\"ScrollingNavBarMobile_transition__RNTtp\",\"darkOverlay\":\"ScrollingNavBarMobile_darkOverlay__1TL8T\",\"showOverlay\":\"ScrollingNavBarMobile_showOverlay__1SHRr\",\"sideButton\":\"ScrollingNavBarMobile_sideButton__ixTKq\",\"stripe\":\"ScrollingNavBarMobile_stripe__16x0x\",\"sideMenu\":\"ScrollingNavBarMobile_sideMenu__3P_0_\",\"showSideMenu\":\"ScrollingNavBarMobile_showSideMenu__11G_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allQualifications\":\"Qualifications_allQualifications__2X536\",\"qualificationNameHolder\":\"Qualifications_qualificationNameHolder__2raWL\",\"infoHolder\":\"Qualifications_infoHolder__31lTX\",\"italicsHolder\":\"Qualifications_italicsHolder__NVZDL\",\"skillBar\":\"Qualifications_skillBar__2BLHe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topFooter\":\"Footer_topFooter__2Rwc1\",\"topFooterContainer\":\"Footer_topFooterContainer__1opAU\",\"contactDetailsHolder\":\"Footer_contactDetailsHolder__9QJTq\",\"bottomFooter\":\"Footer_bottomFooter__3MNBc\",\"bottomFooterContainer\":\"Footer_bottomFooterContainer__2K08S\",\"buttonHolder\":\"Footer_buttonHolder__38W_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBarDesktop\":\"ScrollingNavBarDesktop_navBarDesktop__3D2Yg\",\"linksContainer\":\"ScrollingNavBarDesktop_linksContainer__h8ahk\",\"transition\":\"ScrollingNavBarDesktop_transition__3kaTh\",\"hide\":\"ScrollingNavBarDesktop_hide__2PYrB\",\"selectedSection\":\"ScrollingNavBarDesktop_selectedSection__2FNpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"Projects_mainContainer__2kzS4\",\"backgroundColor\":\"Projects_backgroundColor__3UfOr\",\"projectsHolder\":\"Projects_projectsHolder__Hlv81\",\"imgStyle\":\"Projects_imgStyle__3SzKc\",\"title\":\"Projects_title__dCAFq\",\"seeMoreHolder\":\"Projects_seeMoreHolder__1pH-W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"aboutMeHolder\":\"AboutMe_aboutMeHolder__bOjwW\",\"highestH1\":\"AboutMe_highestH1__2anvy\",\"textsHolder\":\"AboutMe_textsHolder__3z6BC\",\"imageHolder\":\"AboutMe_imageHolder__3tv6s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionClass\":\"LPSection_sectionClass__EuVKo\",\"leftContent\":\"LPSection_leftContent__pNjet\",\"rightContent\":\"LPSection_rightContent__AdlDk\",\"bottomContent\":\"LPSection_bottomContent__3-VB4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgTexts\":\"Intro_imgTexts__2kT5V\",\"buttonHolder\":\"Intro_buttonHolder__2WyDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"percentageBarHolder\":\"PercentageBar_percentageBarHolder__fxRxC\",\"percentageBar\":\"PercentageBar_percentageBar__2uBU4\"};","import ImageButtons from \"./ImageButtons\";\r\nexport default ImageButtons;","import React from \"react\";\r\n\r\nexport default function ImageButtons(props)\r\n{\r\n    const array = props.data;\r\n\r\n    const finalButtonJSX = [];\r\n\r\n    for (const setting of array)\r\n    {\r\n        const linkBgStyle =\r\n        {\r\n            backgroundImage: `url(${setting.buttonImg})`,\r\n            backgroundColor: \"transparent\",\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"contain\"\r\n        };\r\n\r\n        finalButtonJSX.push\r\n            (\r\n                <a href={setting.buttonLink} style={linkBgStyle} target=\"_blank\" />\r\n            );\r\n\r\n\r\n           \r\n    }\r\n\r\n    return (\r\n        <section >{ finalButtonJSX }</section>\r\n    );\r\n}","import React from \"react\";\r\n// import AltLink from \"../../../Common/AltLink\";\r\n//CSS Imports\r\nimport style from \"./Intro.module.css\";\r\nimport commonStyle from \"../../pageMod.module.css\";\r\n//Components\r\nimport ImageButtons from \"../../../Common/ImageButtons\";\r\n\r\n\r\nfunction getSunsetBg()\r\n{\r\n  const hours = new Date().getHours();\r\n  return hours >= 7 && hours < 19\r\n    ? \"/Images/Backgrounds/DayBackground.png\"\r\n    : \"/Images/Backgrounds/NightBackground.png\";\r\n\r\n}\r\n\r\nexport default function Intro(props)\r\n{\r\n  const {introData,socialMediaData} = props.data;\r\n  const { name,buttonSettingsArray } = socialMediaData;\r\n  const { shortDescription} = introData;\r\n\r\n  var bgStyle =\r\n  {\r\n    height: \"100vh\",\r\n    backgroundImage: `url(${getSunsetBg()})`,\r\n    backgroundSize: \"cover\",\r\n    backgroundPosition: \"center top\",\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundColor: \"black\",\r\n    position: \"relative\"\r\n  };\r\n\r\n  return (\r\n    <header className={`${commonStyle.col12}`} style={bgStyle} id={props.id}>\r\n      <div id={style.imgTexts}>\r\n        <h1>I am</h1>\r\n        <h1>{name}</h1>\r\n        <p>\r\n         {shortDescription}\r\n          </p>\r\n        <br />\r\n        <div id={style.buttonHolder}>\r\n          <ImageButtons data={buttonSettingsArray} />\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n","import Intro from \"./Intro\";\r\nexport default Intro;\r\n","import LPSection from \"./LPSection\";\r\nexport default LPSection; //Export LandingPage Section","import React from \"react\";\r\nimport style from \"./LPSection.module.css\";\r\nimport commonStyle from \"../../PageModules/pageMod.module.css\";\r\n\r\nexport default function LPSection(props)\r\n{\r\n  const { leftContent, rightContent, bottomContent,id } = props;\r\n\r\n  return (\r\n    <div className={`${commonStyle.col12} ${style.sectionClass}`} id = {id} >\r\n\r\n      <div className={commonStyle.LProw}>\r\n\r\n        <div className={commonStyle.col3} id={style.leftContent} >\r\n          {leftContent}\r\n        </div>\r\n\r\n        <div className={commonStyle.col9} id={style.rightContent}>\r\n          {rightContent}\r\n        </div>\r\n\r\n      </div>\r\n      \r\n      <div className={commonStyle.LProw} id = {style.bottomContent}>\r\n        {bottomContent} \r\n        </div>\r\n    </div>\r\n  );\r\n}","import AboutMe from \"./AboutMe\";\r\nexport default AboutMe;","import React from \"react\";\r\n//Import style\r\nimport commonStyle from \"../../pageMod.module.css\";\r\nimport style from \"./AboutMe.module.css\";\r\n//Import component\r\nimport LPSection from \"../../../Common/LPSection\";\r\n\r\nexport default function AboutMe(props)\r\n{\r\n    const { aboutMeData, socialMediaData } = props.data;\r\n\r\n    const\r\n        {\r\n            imageURL,\r\n            aboutMeDescription\r\n        } = aboutMeData;\r\n\r\n    const { name, country } = socialMediaData;\r\n\r\n\r\n    var imgStyle =\r\n    {\r\n        height: \"12.5vw\",\r\n        width: \"12.5vw\",\r\n        backgroundImage: `url(${imageURL})`,\r\n        backgroundRepeat: \"no-repeat\",\r\n        backgroundSize: \"cover\",\r\n        zIndex: \"2\",\r\n        borderRadius: \"50%\"\r\n    };\r\n\r\n\r\n    const leftContent =\r\n        <div id={style.imageHolder}>\r\n            <div style={imgStyle} />\r\n        </div>\r\n\r\n    const rightContent =\r\n        <div id={style.textsHolder}>\r\n            <h1 id={style.highestH1}>About Me</h1>\r\n            <p>{aboutMeDescription}</p>\r\n\r\n            <h1>Contact Details</h1>\r\n            <p>{name}<br />{country}</p>\r\n        </div>\r\n\r\n\r\n\r\n    return (\r\n        <div id={style.aboutMeHolder}>\r\n            <LPSection leftContent={leftContent} rightContent={rightContent} id={props.id} />\r\n        </div>\r\n    );\r\n\r\n}","import PercentageBar from \"./PercentageBar\";\r\nexport default PercentageBar;","import React from \"react\";\r\n//Css\r\nimport style from \"./PercentageBar.module.css\";\r\n\r\n\r\n\r\nexport default function PercentageBar(props)\r\n{\r\n    const {percentage,name,color,bgColor} = props;\r\n\r\n    var barStyle =\r\n    {\r\n        width: `${percentage.toString()}%`,\r\n        backgroundColor:color!=undefined? color : \"blue\"\r\n    };\r\n\r\n    var bgBarStyle = \r\n    {\r\n        backgroundColor: bgColor!=undefined? bgColor: \"grey\"\r\n    }\r\n\r\n\r\n    //i used the section and nav semantic tags so that i could overide the colours \r\n    //using outside css files when this component is being used else where.\r\n    return (\r\n        <div >\r\n            <h1>{name}</h1>\r\n            <section className={style.percentageBarHolder} style={bgBarStyle}>\r\n                <nav style={barStyle} className={style.percentageBar} />\r\n            </section>\r\n        </div>\r\n\r\n    );\r\n\r\n}","import React from \"react\";\r\n//Components\r\nimport LPSection from \"../../../Common/LPSection\";\r\nimport PercentageBar from \"../../../Common/PercentageBar\";\r\n//Css \r\nimport style from \"./Qualifications.module.css\";\r\n\r\nconst bottomContent = <div><hr /></div>;\r\n\r\nfunction generateInfoContent(title, subTitle, date, other)\r\n{\r\n    const otherAchievementsJSX = [];\r\n    for (const achievements of other)\r\n    {\r\n        otherAchievementsJSX.push(<li>{achievements}</li>)\r\n    }\r\n\r\n    return (\r\n        <div className={style.infoHolder}>\r\n            <h1>{title}</h1>\r\n            <div className={style.italicsHolder}>\r\n                <i>{subTitle} </i> • {date}\r\n            </div>\r\n            <ul className={style.otherAchievements}>{otherAchievementsJSX}</ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction generateSkillBar(skillName, skillPercentage)\r\n{\r\n\r\n    return (\r\n        <div className={style.skillBar}>\r\n            <PercentageBar percentage={skillPercentage} name={skillName} />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction generateLeftContent(title)\r\n{\r\n    return (<div className={style.qualificationNameHolder}>\r\n        <h1 >\r\n            {title}\r\n        </h1>\r\n    </div>);\r\n}\r\n\r\nexport default function Qualifications(props)\r\n{\r\n    const { educationExpArray, workExpArray, skillsExpArray, id } = props.data;\r\n    const eduRightContent = [], workRightContent = [], skillsRightContent = [];\r\n\r\n    const eduLeftContent = generateLeftContent(\"Education\");\r\n    const workLeftContent = generateLeftContent(\"Work\");\r\n    const skillsLeftContent = generateLeftContent(\"Skills\");\r\n\r\n    //Handles education\r\n    for (const data of educationExpArray)\r\n    {\r\n        const jsxToPush = generateInfoContent\r\n            (\r\n                data.instituteName,\r\n                data.educationCertificate,\r\n                data.dateOfGraduation,\r\n                data.otherAchievements\r\n            );\r\n\r\n\r\n        eduRightContent.push(jsxToPush);\r\n    }\r\n\r\n    //Handles work experience\r\n    for (const data of workExpArray)\r\n    {\r\n        const jsxToPush = generateInfoContent\r\n            (\r\n                data.companyName,\r\n                data.role,\r\n                data.lastDayOfWork,\r\n                data.otherAchievements\r\n            );\r\n\r\n        workRightContent.push(jsxToPush);\r\n    }\r\n\r\n\r\n    //Handles Skill experience\r\n    for (const data of skillsExpArray)\r\n    {\r\n        const jsxToPush = generateSkillBar(data.skillName, data.skillPercentage);\r\n        skillsRightContent.push(jsxToPush);\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div id={style.allQualifications}>\r\n                <LPSection leftContent={eduLeftContent} rightContent={eduRightContent} bottomContent={bottomContent} id = \"EDUCATION\" />\r\n                <LPSection leftContent={workLeftContent} rightContent={workRightContent} bottomContent={bottomContent} id = \"WORK\" />\r\n                <LPSection leftContent={skillsLeftContent} rightContent={skillsRightContent}id = \"SKILLS\" />\r\n        </div>\r\n    );\r\n}","import Qualifications from \"./Qualifications\";\r\nexport default Qualifications;","import Projects from \"./Projects\";\r\nexport default Projects;","import React from \"react\";\r\n//css\r\nimport style from \"./Projects.module.css\";\r\nimport commonStyle from \"../../pageMod.module.css\";\r\n\r\nexport default function Projects(props)\r\n{\r\n    const { projectSettingsArray } = props.data;\r\n    const finalImgJSX = [];\r\n\r\n    for (const setting of projectSettingsArray)\r\n    {\r\n        var imgBgStyle =\r\n        {\r\n            backgroundImage: `url(${setting.projectImg})`,\r\n            backgroundRepeat: \"no-repeat\",\r\n            backgroundSize: \"cover\"\r\n        }\r\n\r\n        finalImgJSX.push\r\n            (\r\n                <a style={imgBgStyle} href={setting.projectLink} className={style.imgStyle} />\r\n            );\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyle.col12} id={style.backgroundColor}>\r\n            <div id={props.id} className={`${commonStyle.LProw} ${style.mainContainer}`} >\r\n\r\n                <h1 id={style.title}>\r\n                    Check out some of my works\r\n                </h1>\r\n\r\n                <div id={style.projectsHolder}>\r\n                    {finalImgJSX}\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import Footer from \"./Footer\";\r\nexport default Footer;","import React from \"react\";\r\n//css\r\nimport commonStyle from \"../../pageMod.module.css\";\r\nimport style from \"./Footer.module.css\";\r\n//Components\r\nimport ImageButtons from \"../../../Common/ImageButtons\";\r\n\r\nexport default function Footer(props)\r\n{\r\n    const { buttonSettingsArray, contactDetailsArray } = props.data;\r\n\r\n    const finalContactJSX = [];\r\n\r\n    for (const item of contactDetailsArray)\r\n    {\r\n        finalContactJSX.push(<p>{`${item.platform}: ${item.id}`}</p>);\r\n    }\r\n\r\n    return (\r\n        <div className={commonStyle.col12} >\r\n            <div className={commonStyle.LProw} id={style.topFooter} >\r\n                <div id = {style.topFooterContainer}>\r\n                    <h1>Feel free to contact me for any work or suggestions below</h1>\r\n                    <div id={style.contactDetailsHolder}>\r\n                        {finalContactJSX}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className={commonStyle.LProw} id={style.bottomFooter}>\r\n               <div id = {style.bottomFooterContainer}>\r\n                <div id={style.buttonHolder}>\r\n                    <ImageButtons data={buttonSettingsArray} />\r\n                </div>\r\n               </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import ScrollingNavBarDesktop from \"./ScrollingNavBarDesktop\";\r\nexport default ScrollingNavBarDesktop;","import React, { Component } from \"react\";\r\nimport commonStyle from \"../../../pageMod.module.css\";\r\nimport style from \"./ScrollingNavBarDesktop.module.css\";\r\n\r\nexport default class ScrollingNavBarDesktop extends Component\r\n{\r\n    constructor()\r\n    {\r\n        super();\r\n        this.m_NavBarDesktopRef = React.createRef();\r\n        this.handleScroll = this.handleScroll.bind(this);\r\n        this.handleWindowResize = this.handleWindowResize.bind(this);\r\n        this.state =\r\n        {\r\n            //For the sake of remembering the state\r\n            // currentState will have 3 values\r\n            // ShownAtTop : This is when the nav bar will render itself regardless of scroll delta \r\n            // as this its original position when a page first loads\r\n            // HiddenPastTop : This is when user scrolls down and the distance covered by the nav bar\r\n            //has been passed \r\n            // ShownPastTop: This is when user scrolls up and when the distance covered by the nav bar has been passed.\r\n            navBarState: \"ShownAtTop\",\r\n            prevScrollY: 0,\r\n            sectionHeightMarks: [],\r\n            currentSectionIndex: -1\r\n        }\r\n    }\r\n\r\n    initialise()\r\n    {\r\n        //So i apparently cant get this.state.\"values name\" when i am inside this componentDidMount scope \r\n        //even though i called \"setstate before logging the value\"\r\n        //So i changed all of the functions into functions that require a parameter\r\n        const newSectionSize = this.getNewSectionsSizes();\r\n        const currSectionIndex = this.getCurrentSectionIndex(newSectionSize);\r\n\r\n        this.changeSelectedSection(currSectionIndex);\r\n        this.setState({ sectionHeightMarks: newSectionSize, currentSectionIndex: currSectionIndex });\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.initialise();\r\n        window.addEventListener(\"scroll\", this.handleScroll);\r\n        window.addEventListener(\"resize\", this.handleWindowResize);\r\n    }\r\n\r\n    componentWillUnmount()\r\n    {\r\n        window.removeEventListener(\"scroll\", this.handleScroll);\r\n        window.removeEventListener(\"resize\", this.handleWindowResize);\r\n    }\r\n\r\n    render()\r\n    {\r\n        const {dataArray} = this.props.data;\r\n        const listItemJSXArray = [];\r\n\r\n\r\n        for (const data of dataArray)\r\n        {\r\n            const { sectionId, sectionName } = data;\r\n\r\n            listItemJSXArray.push\r\n                (\r\n                    <li id={`nav-${sectionId}`}><a href={`#${sectionId}`}>{sectionName}</a></li>\r\n                )\r\n        }\r\n\r\n\r\n\r\n        //We will render the navBar only on desktop\r\n        return (\r\n            <div className={`${commonStyle.col12} ${style.transition}`} id={style.navBarDesktop} ref={this.m_NavBarDesktopRef}>\r\n                <ul className={style.linksContainer}>\r\n                    {listItemJSXArray}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    //<===========================SUPPORTING METHODS=====================================>\r\n\r\n    toggleNavBar()\r\n    {\r\n        this.m_NavBarDesktopRef.current.classList.toggle(style.hide);\r\n    }\r\n\r\n    changeSelectedSection(currentSectionIndex)\r\n    {\r\n        //Clear the prev elements' of the class\r\n        const array = this.props.data.dataArray;\r\n        for (let index = 0; index < array.length; index++)\r\n        {\r\n            const sectionID = `nav-${array[index].sectionId}`;\r\n\r\n            const element = document.getElementById(sectionID);\r\n            element.classList.remove(style.selectedSection);\r\n        }\r\n\r\n        //Set new class to new element\r\n        const newSectionID = `nav-${array[currentSectionIndex].sectionId}`;\r\n        // const newSectionID = `nav-${array[this.state.currentSectionIndex].sectionId}`;\r\n        document.getElementById(newSectionID).classList.add(style.selectedSection);\r\n\r\n    }\r\n\r\n\r\n    handleScroll()\r\n    {\r\n        // Since nav bar is always rendered at the top of the page, we dont need to worry about its position\r\n        const currentScrollY = window.scrollY;\r\n        //Heights\r\n        const heightOfNavBar = this.m_NavBarDesktopRef.current.clientHeight;\r\n\r\n        const { navBarState } = this.state;\r\n        switch (navBarState)\r\n        {\r\n            case \"ShownAtTop\":\r\n                if (currentScrollY > heightOfNavBar)\r\n                {\r\n                    this.toggleNavBar();\r\n                    this.setState({ navBarState: \"HiddenPastTop\", prevScrollY: currentScrollY });\r\n                }\r\n\r\n                break;\r\n\r\n            case \"HiddenPastTop\":\r\n\r\n                //If scroll dir is upwards\r\n                if (currentScrollY < this.state.prevScrollY)\r\n                {\r\n                    const newBarState = currentScrollY <= heightOfNavBar ? \"ShownAtTop\" : \"ShownPastTop\";\r\n                    this.toggleNavBar();\r\n                    this.setState({ navBarState: newBarState, prevScrollY: currentScrollY });\r\n                    return;\r\n                }\r\n\r\n                //Else if scroll dir is downwards\r\n                this.HiddenPastTop_handleScrollDown();\r\n\r\n                break;\r\n\r\n            case \"ShownPastTop\":\r\n                //If scroll dir is downwards\r\n                if (currentScrollY > this.state.prevScrollY)\r\n                {\r\n                    this.toggleNavBar();\r\n                    this.setState({ navBarState: \"HiddenPastTop\", prevScrollY: currentScrollY });\r\n                    return;\r\n                }\r\n\r\n                //Else if scroll dir is upwards \r\n\r\n                //and scroll is entering navbar's original position\r\n                if (currentScrollY <= heightOfNavBar)\r\n                {\r\n                    this.setState({ navBarState: \"ShownAtTop\", prevScrollY: currentScrollY });\r\n                    return;\r\n                }\r\n\r\n                this.ShownPastTop_handleScrollUp();\r\n                break;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    ShownPastTop_handleScrollUp()\r\n    {\r\n        let currentIndex = this.state.currentSectionIndex;\r\n        const currentScrollY = window.scrollY;\r\n\r\n        if (currentIndex === -1)\r\n        {\r\n            this.setState({ currentSectionIndex: this.getCurrentSectionIndex(this.state.sectionHeightMarks), prevScrollY: currentScrollY });\r\n            //Needs to be placed after current section index is set.\r\n            this.changeSelectedSection(this.state.currentSectionIndex);\r\n            return;\r\n        }\r\n\r\n        //Set curr index to section's top index (in relation to sectionHeightMarks)\r\n        currentIndex = this.state.currentSectionIndex;\r\n        //Get the top point of the prev section to indicate that you have reached a new section\r\n        //there is an exception for when currentIndex ==0, since this.state.sectionHeightMarks[0] = 0,\r\n        //top scrollY will never reach lesser than 0 hence, i gave topPoint the value of \r\n        //this.state.sectionHeightMarks[0+1]*0.5 to say that \"hey you reached section 0\"\r\n        const topPoint = currentIndex > 0 ? this.state.sectionHeightMarks[currentIndex] : this.state.sectionHeightMarks[currentIndex + 1] * 0.5;\r\n\r\n\r\n        //When u scroll up, currentScrollY becomes smaller\r\n        //So when your scroll y is smaller than the top point of the section,\r\n        if (currentScrollY <= topPoint)\r\n        {\r\n            //Change the section id\r\n            currentIndex--;\r\n            //I change selected section before setting a new index\r\n            //this means that when currentIndex = 1, selected section is 2 \r\n            //(this gives the effect of actually having to scroll pass section 3 before selection\r\n            //goes to 2)\r\n            this.changeSelectedSection(this.state.currentSectionIndex);\r\n            this.setState\r\n                (\r\n                    { prevScrollY: currentScrollY, currentSectionIndex: currentIndex }\r\n                )\r\n            return;\r\n        }\r\n\r\n        this.setState({ prevScrollY: currentScrollY });\r\n    }\r\n\r\n    HiddenPastTop_handleScrollDown()\r\n    {\r\n        const currentScrollY = window.scrollY;\r\n\r\n        //If index is already set to -1 (to show that it needs to be refreshed)\r\n        if (this.state.currentSectionIndex === -1)\r\n        {\r\n            this.setState({ prevScrollY: currentScrollY });\r\n        }\r\n\r\n        this.setState({ currentSectionIndex: -1, prevScrollY: currentScrollY });\r\n    }\r\n\r\n    //Returns the integer index which corresponds with sectionData's dataArray in props\r\n    //by comparing the current scrolly and all the sectionHeightMarks\r\n    getCurrentSectionIndex(sectionMarksArray)\r\n    {\r\n        // const array = this.state.sectionHeightMarks;\r\n        const currScrollY = window.scrollY;\r\n        //index must be smaller than array.length -1 because the number we r going to return is always going to be index\r\n        //however since we added an extra element inside of updateSectionsSizes (ie 0), we need to -1 one\r\n        for (let index = 0; index < sectionMarksArray.length - 1; index++)\r\n        {\r\n            //imagine top point as the top of a box\r\n            const topPoint = sectionMarksArray[index];\r\n            //Image bot point as the bottom of a box\r\n            const botPoint = sectionMarksArray[index + 1];\r\n\r\n            if (currScrollY >= topPoint && currScrollY < botPoint)\r\n            {\r\n                return index;\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //Update section sizes only when window resizes\r\n    handleWindowResize()\r\n    {\r\n        this.setState({ sectionHeightMarks: this.getNewSectionsSizes() });\r\n    }\r\n\r\n    getNewSectionsSizes()\r\n    {\r\n        const newSectionMarks = [0];\r\n        let currentTotalHeight = 0;\r\n        const { dataArray } = this.props.data;\r\n\r\n        //With the IDs from props, we get and store the currentTotalHeight of the elements (which can be found cause we have the ids)\r\n        //currentTotalHeight is the current total sum of all the elements found so far in the for loop\r\n        for (const data of dataArray)\r\n        {\r\n            const { sectionId } = data;\r\n            currentTotalHeight += document.getElementById(sectionId).clientHeight;\r\n            newSectionMarks.push(currentTotalHeight);\r\n        }\r\n\r\n        // console.log(newSectionMarks);\r\n        return newSectionMarks;\r\n    }\r\n\r\n}","import ScrollingNavBarMobile from \"./ScrollingNavBarMobile\";\r\nexport default ScrollingNavBarMobile;","import React, { Component } from \"react\";\r\nimport commonStyle from \"../../../pageMod.module.css\";\r\nimport style from \"./ScrollingNavBarMobile.module.css\";\r\n\r\nexport default class ScrollingNavBarMobile extends Component\r\n{\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n\r\n    handleClick()\r\n    {\r\n        console.log(\"Hello\");\r\n\r\n        //Toggle overlay\r\n        document.getElementById(style.darkOverlay).classList.toggle(style.showOverlay);\r\n        document.getElementById(style.sideMenu).classList.toggle(style.showSideMenu);\r\n    }\r\n\r\n    render()\r\n    {\r\n        const { dataArray } = this.props.data;\r\n\r\n        const finalJSX = [];\r\n\r\n        for (const data of dataArray)\r\n        {\r\n            finalJSX.push\r\n                (\r\n                    <a href={`#${data.sectionId}`}>\r\n                        {data.sectionName}\r\n                    </a>\r\n                );\r\n        }\r\n\r\n        return (\r\n            <nav id={style.navBarMobileContainer}>\r\n                <div id={style.darkOverlay} className={`${style.transition}`} onClick={this.handleClick} />\r\n\r\n\r\n                <div id={style.sideButton} onClick={this.handleClick}>\r\n                    <div className={style.stripe}></div>\r\n                    <div className={style.stripe}></div>\r\n                </div>\r\n\r\n                <div id={style.sideMenu} className={style.transition}>\r\n\r\n                    {finalJSX}\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import ScrollingNavBar from \"./ScrollingNavBar\";\r\nexport default ScrollingNavBar;","import React from \"react\";\r\n//Components\r\nimport ScrollingNavBarDesktop from \"./ScrollingNavBarDesktop\";\r\nimport ScrollingNavBarMobile from \"./ScrollingNavBarMobile\";\r\n\r\nexport default function ScrollingNavBar(props)\r\n{\r\n    return (\r\n        <nav>\r\n            <ScrollingNavBarDesktop data={props.data} />\r\n            <ScrollingNavBarMobile data={props.data} />\r\n        </nav>\r\n    );\r\n}","import React from \"react\";\r\n//Importing components\r\nimport Intro from \"./Intro\";\r\nimport AboutMe from \"./AboutMe\";\r\nimport Qualifications from \"./Qualifications\";\r\nimport Projects from \"./Projects\";\r\nimport Footer from \"./Footer\";\r\nimport ScrollingNavBar from \"./ScrollingNavBar\";\r\n\r\nconst sectionData =\r\n{\r\n    dataArray:\r\n        [\r\n            {\r\n                sectionId: \"INTRO\",\r\n                sectionName: \"Intro\"\r\n            },\r\n            {\r\n                sectionId: \"ABOUT\",\r\n                sectionName: \"About\"\r\n            },\r\n            {\r\n                sectionId: \"EDUCATION\",\r\n                sectionName: \"Education\"\r\n            },\r\n            {\r\n                sectionId: \"WORK\",\r\n                sectionName: \"Work\"\r\n            },\r\n            {\r\n                sectionId: \"SKILLS\",\r\n                sectionName: \"Skills\"\r\n            },\r\n            {\r\n                sectionId: \"PROJECTS\",\r\n                sectionName: \"Projects\"\r\n            },\r\n\r\n        ]\r\n\r\n};\r\n\r\n\r\nexport default function LandingPage(props)\r\n{\r\n\r\n    return (\r\n        <div>\r\n            <ScrollingNavBar data={sectionData} />\r\n\r\n            <Intro data={{socialMediaData : props.data.socialMediaData,introData: props.data.introData }} id=\"INTRO\" />\r\n\r\n            <AboutMe data={{aboutMeData : props.data.aboutMeData , socialMediaData : props.data.socialMediaData}} id=\"ABOUT\" />\r\n\r\n            <Qualifications data={props.data.qualificationsData} />\r\n            <Projects data={props.data.projectsData} id=\"PROJECTS\" />\r\n            <Footer data={props.data.socialMediaData} />\r\n        </div>\r\n    );\r\n}\r\n\r\n","import LandingPage from \"./LandingPage\";\r\nexport default LandingPage;","const data =\r\n{\r\n    landingPageData:\r\n    {\r\n        //THis will hold data for both intro component & footer component\r\n        socialMediaData:\r\n        {\r\n            //Object properties: buttonLink (string),buttonImg (string)\r\n            buttonSettingsArray:\r\n                [\r\n                    {\r\n                        buttonLink: \"https://github.com/bestcolour\",\r\n                        buttonImg: \"Images/GitHubLogo.png\"\r\n                    }\r\n                    ,\r\n                ]\r\n            ,\r\n            contactDetailsArray:\r\n                [\r\n                    {\r\n                        platform: \"Linked in\",\r\n                        id: \"John Doe\"\r\n                    },\r\n                ]\r\n                ,\r\n            // name: \"John Doe\",\r\n            name: \"John Doe\",\r\n            country: \"Earth\"\r\n\r\n        }\r\n        ,\r\n        introData:\r\n        {\r\n            shortDescription: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sit amet risus ultricies lacus convallis sodales. Aenean a lacus vel lorem ullamcorper volutpat quis sit amet tortor.\"\r\n        }\r\n        ,\r\n        aboutMeData:\r\n        {\r\n            imageURL: \"Images/Backgrounds/DayBackground.png\",\r\n            aboutMeDescription:\r\n                \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse sit amet risus ultricies lacus convallis sodales. Aenean a lacus vel lorem ullamcorper volutpat quis sit amet tortor. Donec condimentum auctor odio, et mattis lacus iaculis at. Sed eget massa non nisi sagittis dignissim in quis odio. \"\r\n            ,\r\n        }\r\n        ,\r\n        qualificationsData:\r\n        {\r\n            //Object properties: instituteName (string),educationCertificate (string), dateOfGraduation(string), otherAchievements(array of strings)\r\n            educationExpArray:\r\n                [\r\n                    {\r\n                        instituteName: \"Sunset High School\",\r\n                        educationCertificate: \"Diploma in Game Design & Development\",\r\n                        dateOfGraduation: \"May 2021\",\r\n                        otherAchievements:\r\n                            [\r\n                                \"Making the world green\",\r\n                                \"Converting O2 to CO2\"\r\n                            ]\r\n                    }\r\n                    ,\r\n                ]\r\n            ,\r\n            //Object properties: companyName (string),role (string), lastDayOfWork(string), otherAchievements(array of strings)\r\n            workExpArray:\r\n                [\r\n                    {\r\n                        companyName: \"Sunset High School\",\r\n                        role: \"Diploma in Game Design & Development\",\r\n                        lastDayOfWork: \"May 2021\",\r\n                        otherAchievements: [\"Making the world green\"]\r\n                    }\r\n                    ,\r\n                    {\r\n                        companyName: \"Sunset High School\",\r\n                        role: \"Diploma in Game Design & Development\",\r\n                        lastDayOfWork: \"May 2021\",\r\n                        otherAchievements: [\"Making the world green\"]\r\n                    }\r\n                    ,\r\n                    {\r\n                        companyName: \"Sunset High School\",\r\n                        role: \"Diploma in Game Design & Development\",\r\n                        lastDayOfWork: \"May 2021\",\r\n                        otherAchievements: [\"Making the world green\"]\r\n                    }\r\n                ]\r\n            ,\r\n            //Object properties: skillName (string), skillPercentage (number)\r\n            skillsExpArray:\r\n                [\r\n                    {\r\n                        skillName: \"Unity\",\r\n                        skillPercentage: 85\r\n                    }\r\n                    ,\r\n                    {\r\n                        skillName: \"HTML\",\r\n                        skillPercentage: 25\r\n                    }\r\n                    ,\r\n                    {\r\n                        skillName: \"CSS\",\r\n                        skillPercentage: 25\r\n                    }\r\n                    ,\r\n                    {\r\n                        skillName: \"ReactJS\",\r\n                        skillPercentage: 30\r\n                    }\r\n                    ,\r\n\r\n                ]\r\n        },\r\n        projectsData:\r\n        {\r\n            //Object properties: projectLink (string), projectImg (string)\r\n            projectSettingsArray:\r\n                [\r\n                    {\r\n                        projectLink: \"https://github.com/bestcolour\",\r\n                        projectImg: \"Images/Backgrounds/DayBackground.png\"\r\n                    }\r\n                    , {\r\n                        projectLink: \"https://github.com/bestcolour\",\r\n                        projectImg: \"Images/Backgrounds/NightBackground.png\"\r\n                    },\r\n                    {\r\n                        projectLink: \"https://github.com/bestcolour\",\r\n                        projectImg: \"Images/Backgrounds/DayBackground.png\"\r\n                    }\r\n                    , {\r\n                        projectLink: \"https://github.com/bestcolour\",\r\n                        projectImg: \"Images/Backgrounds/NightBackground.png\"\r\n                    }\r\n                ],\r\n        },\r\n\r\n    }\r\n\r\n};\r\n\r\nexport default data;","import React from \"react\";\r\n//Components\r\nimport LandingPage from \"./Components/PageModules/LandingPage\";\r\nimport style from \"./App.module.css\";\r\n//Data\r\nimport data from \"./Data\";\r\n\r\nfunction App()\r\n{\r\n  return (\r\n    <div>\r\n      <LandingPage key=\"landingPage\" data={data.landingPageData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}